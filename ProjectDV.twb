<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='df_vaccinations' inline='true' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_vaccinations' name='textscan.1houkr50wcbknq162qirt04aqjtv'>
            <connection class='textscan' directory='C:/Users/venka/Documents/My Tableau Repository/Workbooks/ProjectDV.twb Files/Users/sevgisaracyilmaz/Downloads' port='0' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='df_covid' name='textscan.17zspgz0d05jvq11t6nrd1antx7r'>
            <connection class='textscan' directory='C:/Users/venka/Documents/My Tableau Repository/Workbooks/ProjectDV.twb Files/Users/sevgisaracyilmaz/Downloads' port='0' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='df_vaccinations (2)' name='textscan.0wbnqhv1hfi3sk1g6s15f0ne233z'>
            <connection class='textscan' directory='C:/Users/venka/Documents/My Tableau Repository/Workbooks/ProjectDV.twb Files/Users/sevgisaracyilmaz/Downloads/results' port='0' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17zspgz0d05jvq11t6nrd1antx7r' name='df_covid.csv' table='[df_covid#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='date' name='date' ordinal='4' />
            <column datatype='real' name='total_cases' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='real' name='total_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='real' name='reproduction_rate' ordinal='17' />
            <column datatype='string' name='icu_patients' ordinal='18' />
            <column datatype='string' name='icu_patients_per_million' ordinal='19' />
            <column datatype='string' name='hosp_patients' ordinal='20' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='24' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='25' />
            <column datatype='real' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests' ordinal='27' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed' ordinal='30' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='real' name='tests_per_case' ordinal='33' />
            <column datatype='string' name='tests_units' ordinal='34' />
            <column datatype='string' name='total_vaccinations' ordinal='35' />
            <column datatype='string' name='people_vaccinated' ordinal='36' />
            <column datatype='string' name='people_fully_vaccinated' ordinal='37' />
            <column datatype='string' name='new_vaccinations' ordinal='38' />
            <column datatype='string' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='string' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='string' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='string' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='new_vaccinations_smoothed_per_million' ordinal='43' />
            <column datatype='real' name='stringency_index' ordinal='44' />
            <column datatype='real' name='population' ordinal='45' />
            <column datatype='real' name='population_density' ordinal='46' />
            <column datatype='real' name='median_age' ordinal='47' />
            <column datatype='real' name='aged_65_older' ordinal='48' />
            <column datatype='real' name='aged_70_older' ordinal='49' />
            <column datatype='real' name='gdp_per_capita' ordinal='50' />
            <column datatype='real' name='extreme_poverty' ordinal='51' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='52' />
            <column datatype='real' name='diabetes_prevalence' ordinal='53' />
            <column datatype='real' name='female_smokers' ordinal='54' />
            <column datatype='real' name='male_smokers' ordinal='55' />
            <column datatype='real' name='handwashing_facilities' ordinal='56' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='57' />
            <column datatype='real' name='life_expectancy' ordinal='58' />
            <column datatype='real' name='human_development_index' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1houkr50wcbknq162qirt04aqjtv' name='df_vaccinations.csv' table='[df_vaccinations#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='location' ordinal='1' />
              <column datatype='string' name='iso_code' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='integer' name='year' ordinal='4' />
              <column datatype='integer' name='month' ordinal='5' />
              <column datatype='integer' name='day' ordinal='6' />
              <column datatype='real' name='total_vaccinations' ordinal='7' />
              <column datatype='real' name='people_vaccinated' ordinal='8' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='9' />
              <column datatype='real' name='daily_vaccinations_raw' ordinal='10' />
              <column datatype='real' name='daily_vaccinations' ordinal='11' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='12' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='13' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='14' />
              <column datatype='real' name='daily_vaccinations_per_million' ordinal='15' />
              <column datatype='string' name='vaccines' ordinal='16' />
            </columns>
          </relation>
          <relation connection='textscan.17zspgz0d05jvq11t6nrd1antx7r' name='df_covid.csv' table='[df_covid#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='iso_code' ordinal='1' />
              <column datatype='string' name='continent' ordinal='2' />
              <column datatype='string' name='location' ordinal='3' />
              <column datatype='date' name='date' ordinal='4' />
              <column datatype='real' name='total_cases' ordinal='5' />
              <column datatype='real' name='new_cases' ordinal='6' />
              <column datatype='real' name='new_cases_smoothed' ordinal='7' />
              <column datatype='real' name='total_deaths' ordinal='8' />
              <column datatype='real' name='new_deaths' ordinal='9' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
              <column datatype='real' name='total_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_per_million' ordinal='12' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
              <column datatype='real' name='total_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_per_million' ordinal='15' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
              <column datatype='real' name='reproduction_rate' ordinal='17' />
              <column datatype='string' name='icu_patients' ordinal='18' />
              <column datatype='string' name='icu_patients_per_million' ordinal='19' />
              <column datatype='string' name='hosp_patients' ordinal='20' />
              <column datatype='string' name='hosp_patients_per_million' ordinal='21' />
              <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
              <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
              <column datatype='string' name='weekly_hosp_admissions' ordinal='24' />
              <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='25' />
              <column datatype='real' name='new_tests' ordinal='26' />
              <column datatype='real' name='total_tests' ordinal='27' />
              <column datatype='real' name='total_tests_per_thousand' ordinal='28' />
              <column datatype='real' name='new_tests_per_thousand' ordinal='29' />
              <column datatype='real' name='new_tests_smoothed' ordinal='30' />
              <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='31' />
              <column datatype='real' name='positive_rate' ordinal='32' />
              <column datatype='real' name='tests_per_case' ordinal='33' />
              <column datatype='string' name='tests_units' ordinal='34' />
              <column datatype='string' name='total_vaccinations' ordinal='35' />
              <column datatype='string' name='people_vaccinated' ordinal='36' />
              <column datatype='string' name='people_fully_vaccinated' ordinal='37' />
              <column datatype='string' name='new_vaccinations' ordinal='38' />
              <column datatype='string' name='new_vaccinations_smoothed' ordinal='39' />
              <column datatype='string' name='total_vaccinations_per_hundred' ordinal='40' />
              <column datatype='string' name='people_vaccinated_per_hundred' ordinal='41' />
              <column datatype='string' name='people_fully_vaccinated_per_hundred' ordinal='42' />
              <column datatype='string' name='new_vaccinations_smoothed_per_million' ordinal='43' />
              <column datatype='real' name='stringency_index' ordinal='44' />
              <column datatype='real' name='population' ordinal='45' />
              <column datatype='real' name='population_density' ordinal='46' />
              <column datatype='real' name='median_age' ordinal='47' />
              <column datatype='real' name='aged_65_older' ordinal='48' />
              <column datatype='real' name='aged_70_older' ordinal='49' />
              <column datatype='real' name='gdp_per_capita' ordinal='50' />
              <column datatype='real' name='extreme_poverty' ordinal='51' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='52' />
              <column datatype='real' name='diabetes_prevalence' ordinal='53' />
              <column datatype='real' name='female_smokers' ordinal='54' />
              <column datatype='real' name='male_smokers' ordinal='55' />
              <column datatype='real' name='handwashing_facilities' ordinal='56' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='57' />
              <column datatype='real' name='life_expectancy' ordinal='58' />
              <column datatype='real' name='human_development_index' ordinal='59' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1 (df_covid.csv)]' value='[df_covid.csv].[F1]' />
          <map key='[F1]' value='[df_vaccinations.csv].[F1]' />
          <map key='[aged_65_older]' value='[df_covid.csv].[aged_65_older]' />
          <map key='[aged_70_older]' value='[df_covid.csv].[aged_70_older]' />
          <map key='[cardiovasc_death_rate]' value='[df_covid.csv].[cardiovasc_death_rate]' />
          <map key='[continent]' value='[df_covid.csv].[continent]' />
          <map key='[daily_vaccinations]' value='[df_vaccinations.csv].[daily_vaccinations]' />
          <map key='[daily_vaccinations_per_million]' value='[df_vaccinations.csv].[daily_vaccinations_per_million]' />
          <map key='[daily_vaccinations_raw]' value='[df_vaccinations.csv].[daily_vaccinations_raw]' />
          <map key='[date (df_covid.csv)]' value='[df_covid.csv].[date]' />
          <map key='[date]' value='[df_vaccinations.csv].[date]' />
          <map key='[day]' value='[df_vaccinations.csv].[day]' />
          <map key='[diabetes_prevalence]' value='[df_covid.csv].[diabetes_prevalence]' />
          <map key='[extreme_poverty]' value='[df_covid.csv].[extreme_poverty]' />
          <map key='[female_smokers]' value='[df_covid.csv].[female_smokers]' />
          <map key='[gdp_per_capita]' value='[df_covid.csv].[gdp_per_capita]' />
          <map key='[handwashing_facilities]' value='[df_covid.csv].[handwashing_facilities]' />
          <map key='[hosp_patients]' value='[df_covid.csv].[hosp_patients]' />
          <map key='[hosp_patients_per_million]' value='[df_covid.csv].[hosp_patients_per_million]' />
          <map key='[hospital_beds_per_thousand]' value='[df_covid.csv].[hospital_beds_per_thousand]' />
          <map key='[human_development_index]' value='[df_covid.csv].[human_development_index]' />
          <map key='[icu_patients]' value='[df_covid.csv].[icu_patients]' />
          <map key='[icu_patients_per_million]' value='[df_covid.csv].[icu_patients_per_million]' />
          <map key='[iso_code (df_covid.csv)]' value='[df_covid.csv].[iso_code]' />
          <map key='[iso_code]' value='[df_vaccinations.csv].[iso_code]' />
          <map key='[life_expectancy]' value='[df_covid.csv].[life_expectancy]' />
          <map key='[location (df_covid.csv)]' value='[df_covid.csv].[location]' />
          <map key='[location]' value='[df_vaccinations.csv].[location]' />
          <map key='[male_smokers]' value='[df_covid.csv].[male_smokers]' />
          <map key='[median_age]' value='[df_covid.csv].[median_age]' />
          <map key='[month]' value='[df_vaccinations.csv].[month]' />
          <map key='[new_cases]' value='[df_covid.csv].[new_cases]' />
          <map key='[new_cases_per_million]' value='[df_covid.csv].[new_cases_per_million]' />
          <map key='[new_cases_smoothed]' value='[df_covid.csv].[new_cases_smoothed]' />
          <map key='[new_cases_smoothed_per_million]' value='[df_covid.csv].[new_cases_smoothed_per_million]' />
          <map key='[new_deaths]' value='[df_covid.csv].[new_deaths]' />
          <map key='[new_deaths_per_million]' value='[df_covid.csv].[new_deaths_per_million]' />
          <map key='[new_deaths_smoothed]' value='[df_covid.csv].[new_deaths_smoothed]' />
          <map key='[new_deaths_smoothed_per_million]' value='[df_covid.csv].[new_deaths_smoothed_per_million]' />
          <map key='[new_tests]' value='[df_covid.csv].[new_tests]' />
          <map key='[new_tests_per_thousand]' value='[df_covid.csv].[new_tests_per_thousand]' />
          <map key='[new_tests_smoothed]' value='[df_covid.csv].[new_tests_smoothed]' />
          <map key='[new_tests_smoothed_per_thousand]' value='[df_covid.csv].[new_tests_smoothed_per_thousand]' />
          <map key='[new_vaccinations]' value='[df_covid.csv].[new_vaccinations]' />
          <map key='[new_vaccinations_smoothed]' value='[df_covid.csv].[new_vaccinations_smoothed]' />
          <map key='[new_vaccinations_smoothed_per_million]' value='[df_covid.csv].[new_vaccinations_smoothed_per_million]' />
          <map key='[people_fully_vaccinated (df_covid.csv)]' value='[df_covid.csv].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated]' value='[df_vaccinations.csv].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred (df_covid.csv)]' value='[df_covid.csv].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[df_vaccinations.csv].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated (df_covid.csv)]' value='[df_covid.csv].[people_vaccinated]' />
          <map key='[people_vaccinated]' value='[df_vaccinations.csv].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred (df_covid.csv)]' value='[df_covid.csv].[people_vaccinated_per_hundred]' />
          <map key='[people_vaccinated_per_hundred]' value='[df_vaccinations.csv].[people_vaccinated_per_hundred]' />
          <map key='[population]' value='[df_covid.csv].[population]' />
          <map key='[population_density]' value='[df_covid.csv].[population_density]' />
          <map key='[positive_rate]' value='[df_covid.csv].[positive_rate]' />
          <map key='[reproduction_rate]' value='[df_covid.csv].[reproduction_rate]' />
          <map key='[stringency_index]' value='[df_covid.csv].[stringency_index]' />
          <map key='[tests_per_case]' value='[df_covid.csv].[tests_per_case]' />
          <map key='[tests_units]' value='[df_covid.csv].[tests_units]' />
          <map key='[total_cases]' value='[df_covid.csv].[total_cases]' />
          <map key='[total_cases_per_million]' value='[df_covid.csv].[total_cases_per_million]' />
          <map key='[total_deaths]' value='[df_covid.csv].[total_deaths]' />
          <map key='[total_deaths_per_million]' value='[df_covid.csv].[total_deaths_per_million]' />
          <map key='[total_tests]' value='[df_covid.csv].[total_tests]' />
          <map key='[total_tests_per_thousand]' value='[df_covid.csv].[total_tests_per_thousand]' />
          <map key='[total_vaccinations (df_covid.csv)]' value='[df_covid.csv].[total_vaccinations]' />
          <map key='[total_vaccinations]' value='[df_vaccinations.csv].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred (df_covid.csv)]' value='[df_covid.csv].[total_vaccinations_per_hundred]' />
          <map key='[total_vaccinations_per_hundred]' value='[df_vaccinations.csv].[total_vaccinations_per_hundred]' />
          <map key='[vaccines]' value='[df_vaccinations.csv].[vaccines]' />
          <map key='[weekly_hosp_admissions]' value='[df_covid.csv].[weekly_hosp_admissions]' />
          <map key='[weekly_hosp_admissions_per_million]' value='[df_covid.csv].[weekly_hosp_admissions_per_million]' />
          <map key='[weekly_icu_admissions]' value='[df_covid.csv].[weekly_icu_admissions]' />
          <map key='[weekly_icu_admissions_per_million]' value='[df_covid.csv].[weekly_icu_admissions_per_million]' />
          <map key='[year]' value='[df_vaccinations.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccines]</local-name>
            <parent-name>[df_vaccinations.csv]</parent-name>
            <remote-alias>vaccines</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_vaccinations (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[people_vaccinated (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[people_fully_vaccinated (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_vaccinations_per_hundred (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[people_vaccinated_per_hundred (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred (df_covid.csv)]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[df_covid.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Case/Population' datatype='real' name='[Calculation_2325616634514325504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_cases]/[population]' />
      </column>
      <column caption='%vaccinated population' datatype='real' name='[Calculation_2325616634522685441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_vaccinations]/[population]' />
      </column>
      <column caption='Vaccinated population' datatype='real' name='[Calculation_2325616634524348418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_vaccinations]/[population]' />
      </column>
      <column caption='Fully vaccinated of Population' datatype='real' name='[Calculation_2325616634528698371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
      </column>
      <column caption='F1 (df covid.csv)' datatype='integer' name='[F1 (df_covid.csv)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_covid.csv' datatype='table' name='[__tableau_internal_object_id__].[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_vaccinations.csv' datatype='table' name='[__tableau_internal_object_id__].[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Per Million' datatype='real' name='[daily_vaccinations_per_million]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Raw' datatype='real' name='[daily_vaccinations_raw]' role='measure' type='quantitative' />
      <column caption='Date (Df Covid.Csv)' datatype='date' name='[date (df_covid.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code (Df Covid.Csv)' datatype='string' name='[iso_code (df_covid.csv)]' role='dimension' type='nominal' />
      <column aggregate-role-from='[location]' caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location (Df Covid.Csv)' datatype='string' name='[location (df_covid.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='string' name='[new_vaccinations]' role='dimension' type='nominal' />
      <column caption='New Vaccinations Smoothed' datatype='string' name='[new_vaccinations_smoothed]' role='dimension' type='nominal' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='string' name='[new_vaccinations_smoothed_per_million]' role='dimension' type='nominal' />
      <column caption='People Fully Vaccinated (Df Covid.Csv)' datatype='string' name='[people_fully_vaccinated (df_covid.csv)]' role='dimension' type='nominal' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred (Df Covid.Csv)' datatype='string' name='[people_fully_vaccinated_per_hundred (df_covid.csv)]' role='dimension' type='nominal' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated (Df Covid.Csv)' datatype='string' name='[people_vaccinated (df_covid.csv)]' role='dimension' type='nominal' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred (Df Covid.Csv)' datatype='string' name='[people_vaccinated_per_hundred (df_covid.csv)]' role='dimension' type='nominal' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations (Df Covid.Csv)' datatype='integer' datatype-customized='true' name='[total_vaccinations (df_covid.csv)]' role='dimension' type='ordinal' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred (Df Covid.Csv)' datatype='string' name='[total_vaccinations_per_hundred (df_covid.csv)]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[daily_vaccinations]' derivation='None' name='[none:daily_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location (df_covid.csv)]' derivation='None' name='[none:location (df_covid.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Daily Vaccinations,DAY(Date),Location,MONTH(Date),QUARTER(Date),YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:daily_vaccinations:qk]' />
          <groupfilter function='level-members' level='[dy:date:ok]' />
          <groupfilter function='level-members' level='[none:location:nk]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
          <groupfilter function='level-members' level='[qr:date:ok]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Daily Vaccinations,MONTH(Date),Vaccines,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:daily_vaccinations:qk]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[none:vaccines:nk]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Hosp Patients Set' name='[Hosp Patients Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[hosp_patients]' />
          <groupfilter function='empty-level' member='[hosp_patients]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Iso Code (Df Covid.Csv), Location'>
          <field>[iso_code]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/venka/Documents/My Tableau Repository/Workbooks/ProjectDV.twb Files/federated.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/18/2021 09:29:47 AM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='df_covid.csv_1291055C7D3B4927BB216F82966B71DC' table='[Extract].[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6' table='[Extract].[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]' type='table' />
            <relation name='df_covid.csv_1291055C7D3B4927BB216F82966B71DC' table='[Extract].[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[F1 (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[F1]' />
            <map key='[F1]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[F1]' />
            <map key='[aged_65_older]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[aged_65_older]' />
            <map key='[aged_70_older]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[aged_70_older]' />
            <map key='[cardiovasc_death_rate]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[cardiovasc_death_rate]' />
            <map key='[continent]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[continent]' />
            <map key='[daily_vaccinations]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[daily_vaccinations]' />
            <map key='[daily_vaccinations_per_million]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[daily_vaccinations_per_million]' />
            <map key='[daily_vaccinations_raw]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[daily_vaccinations_raw]' />
            <map key='[date (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[date]' />
            <map key='[date]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[date]' />
            <map key='[day]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[day]' />
            <map key='[diabetes_prevalence]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[diabetes_prevalence]' />
            <map key='[extreme_poverty]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[extreme_poverty]' />
            <map key='[female_smokers]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[female_smokers]' />
            <map key='[gdp_per_capita]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[gdp_per_capita]' />
            <map key='[handwashing_facilities]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[handwashing_facilities]' />
            <map key='[hosp_patients]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[hosp_patients]' />
            <map key='[hosp_patients_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[hosp_patients_per_million]' />
            <map key='[hospital_beds_per_thousand]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[hospital_beds_per_thousand]' />
            <map key='[human_development_index]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[human_development_index]' />
            <map key='[icu_patients]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[icu_patients]' />
            <map key='[icu_patients_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[icu_patients_per_million]' />
            <map key='[iso_code (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[iso_code]' />
            <map key='[iso_code]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[iso_code]' />
            <map key='[life_expectancy]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[life_expectancy]' />
            <map key='[location (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[location]' />
            <map key='[location]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[location]' />
            <map key='[male_smokers]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[male_smokers]' />
            <map key='[median_age]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[median_age]' />
            <map key='[month]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[month]' />
            <map key='[new_cases]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_cases]' />
            <map key='[new_cases_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_cases_per_million]' />
            <map key='[new_cases_smoothed]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_cases_smoothed]' />
            <map key='[new_cases_smoothed_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_cases_smoothed_per_million]' />
            <map key='[new_deaths]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_deaths]' />
            <map key='[new_deaths_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_deaths_per_million]' />
            <map key='[new_deaths_smoothed]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_deaths_smoothed]' />
            <map key='[new_deaths_smoothed_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_deaths_smoothed_per_million]' />
            <map key='[new_tests]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_tests]' />
            <map key='[new_tests_per_thousand]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_tests_per_thousand]' />
            <map key='[new_tests_smoothed]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_tests_smoothed]' />
            <map key='[new_tests_smoothed_per_thousand]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_tests_smoothed_per_thousand]' />
            <map key='[new_vaccinations]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_vaccinations]' />
            <map key='[new_vaccinations_smoothed]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_vaccinations_smoothed]' />
            <map key='[new_vaccinations_smoothed_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[new_vaccinations_smoothed_per_million]' />
            <map key='[people_fully_vaccinated (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[people_fully_vaccinated]' />
            <map key='[people_fully_vaccinated]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[people_fully_vaccinated]' />
            <map key='[people_fully_vaccinated_per_hundred (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[people_fully_vaccinated_per_hundred]' />
            <map key='[people_fully_vaccinated_per_hundred]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[people_fully_vaccinated_per_hundred]' />
            <map key='[people_vaccinated (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[people_vaccinated]' />
            <map key='[people_vaccinated]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[people_vaccinated]' />
            <map key='[people_vaccinated_per_hundred (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[people_vaccinated_per_hundred]' />
            <map key='[people_vaccinated_per_hundred]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[people_vaccinated_per_hundred]' />
            <map key='[population]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[population]' />
            <map key='[population_density]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[population_density]' />
            <map key='[positive_rate]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[positive_rate]' />
            <map key='[reproduction_rate]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[reproduction_rate]' />
            <map key='[stringency_index]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[stringency_index]' />
            <map key='[tests_per_case]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[tests_per_case]' />
            <map key='[tests_units]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[tests_units]' />
            <map key='[total_cases]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_cases]' />
            <map key='[total_cases_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_cases_per_million]' />
            <map key='[total_deaths]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_deaths]' />
            <map key='[total_deaths_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_deaths_per_million]' />
            <map key='[total_tests]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_tests]' />
            <map key='[total_tests_per_thousand]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_tests_per_thousand]' />
            <map key='[total_vaccinations (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_vaccinations]' />
            <map key='[total_vaccinations]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[total_vaccinations]' />
            <map key='[total_vaccinations_per_hundred (df_covid.csv)]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[total_vaccinations_per_hundred]' />
            <map key='[total_vaccinations_per_hundred]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[total_vaccinations_per_hundred]' />
            <map key='[vaccines]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[vaccines]' />
            <map key='[weekly_hosp_admissions]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[weekly_hosp_admissions]' />
            <map key='[weekly_hosp_admissions_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[weekly_hosp_admissions_per_million]' />
            <map key='[weekly_icu_admissions]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[weekly_icu_admissions]' />
            <map key='[weekly_icu_admissions_per_million]' value='[df_covid.csv_1291055C7D3B4927BB216F82966B71DC].[weekly_icu_admissions_per_million]' />
            <map key='[year]' value='[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6].[year]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>2</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>4</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>5</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>20</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>6</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>7</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1847</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>8</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1644</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>9</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1035</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_vaccinations_raw</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_vaccinations_raw]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>daily_vaccinations_raw</remote-alias>
              <ordinal>10</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1614</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_vaccinations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_vaccinations]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>daily_vaccinations</remote-alias>
              <ordinal>11</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1788</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>12</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>718</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>13</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>568</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>14</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>258</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_vaccinations_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_vaccinations_per_million]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>daily_vaccinations_per_million</remote-alias>
              <ordinal>15</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1382</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vaccines</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vaccines]</local-name>
              <parent-name>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</parent-name>
              <remote-alias>vaccines</remote-alias>
              <ordinal>16</ordinal>
              <family>df_vaccinations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1 (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>17</ordinal>
              <family>df_covid.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69582</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>18</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>271</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>19</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>20</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>271</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>21</ordinal>
              <family>df_covid.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>832</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>22</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14225</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>23</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4687</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_cases_smoothed</remote-alias>
              <ordinal>24</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8098</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>25</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5388</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>26</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1196</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_deaths_smoothed</remote-alias>
              <ordinal>27</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2248</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>28</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_cases_per_million</remote-alias>
              <ordinal>29</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15063</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_cases_smoothed_per_million</remote-alias>
              <ordinal>30</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15952</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>31</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12120</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_deaths_per_million</remote-alias>
              <ordinal>32</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_deaths_smoothed_per_million</remote-alias>
              <ordinal>33</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5030</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reproduction_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reproduction_rate]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>reproduction_rate</remote-alias>
              <ordinal>34</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>525</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients</remote-name>
              <remote-type>129</remote-type>
              <local-name>[icu_patients]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>icu_patients</remote-alias>
              <ordinal>35</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1516</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[icu_patients_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>icu_patients_per_million</remote-alias>
              <ordinal>36</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3908</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hosp_patients]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>hosp_patients</remote-alias>
              <ordinal>37</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3199</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hosp_patients_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>hosp_patients_per_million</remote-alias>
              <ordinal>38</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4608</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_icu_admissions]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>weekly_icu_admissions</remote-alias>
              <ordinal>39</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_icu_admissions_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>weekly_icu_admissions_per_million</remote-alias>
              <ordinal>40</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_hosp_admissions]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>weekly_hosp_admissions</remote-alias>
              <ordinal>41</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>637</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekly_hosp_admissions_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
              <ordinal>42</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>637</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_tests</remote-alias>
              <ordinal>43</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23984</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>44</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40910</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>45</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19658</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_per_thousand]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_tests_per_thousand</remote-alias>
              <ordinal>46</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4744</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_tests_smoothed</remote-alias>
              <ordinal>47</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed_per_thousand]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
              <ordinal>48</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4902</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>49</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>944</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>50</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3116</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>51</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>52</ordinal>
              <family>df_covid.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2448</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>129</remote-type>
              <local-name>[people_vaccinated (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>53</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>129</remote-type>
              <local-name>[people_fully_vaccinated (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>54</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1403</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>129</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>55</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1942</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed</remote-name>
              <remote-type>129</remote-type>
              <local-name>[new_vaccinations_smoothed]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_vaccinations_smoothed</remote-alias>
              <ordinal>56</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2169</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>129</remote-type>
              <local-name>[total_vaccinations_per_hundred (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>57</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1485</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>129</remote-type>
              <local-name>[people_vaccinated_per_hundred (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>58</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2031</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>129</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred (df_covid.csv)]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>59</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1403</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed_per_million</remote-name>
              <remote-type>129</remote-type>
              <local-name>[new_vaccinations_smoothed_per_million]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
              <ordinal>60</ordinal>
              <family>df_covid.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2169</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stringency_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stringency_index]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>stringency_index</remote-alias>
              <ordinal>61</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>62</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>271</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>63</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_age]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>median_age</remote-alias>
              <ordinal>64</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_65_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_65_older]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>aged_65_older</remote-alias>
              <ordinal>65</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_70_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_70_older]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>aged_70_older</remote-alias>
              <ordinal>66</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>67</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>239</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extreme_poverty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[extreme_poverty]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>extreme_poverty</remote-alias>
              <ordinal>68</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cardiovasc_death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cardiovasc_death_rate]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>cardiovasc_death_rate</remote-alias>
              <ordinal>69</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevalence</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevalence]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>diabetes_prevalence</remote-alias>
              <ordinal>70</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>172</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_smokers]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>female_smokers</remote-alias>
              <ordinal>71</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[male_smokers]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>male_smokers</remote-alias>
              <ordinal>72</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handwashing_facilities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[handwashing_facilities]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>handwashing_facilities</remote-alias>
              <ordinal>73</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>74</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>75</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>76</ordinal>
              <family>df_covid.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>185</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location (df_covid.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:vaccines:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Oxford/AstraZeneca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#519c51'>
              <bucket>&quot;Moderna, Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Pfizer/BioNTech, Sinopharm&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Pfizer/BioNTech, Sinopharm/Beijing&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oxford/AstraZeneca, Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Pfizer/BioNTech, Sinopharm, Sputnik V&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Pfizer/BioNTech, Sinopharm/Beijing, Sputnik V&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Oxford/AstraZeneca, Sinovac&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Moderna, Oxford/AstraZeneca, Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oxford/AstraZeneca, Sputnik V&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Oxford/AstraZeneca, Pfizer/BioNTech, Sinopharm/Beijing, Sinopharm/Wuhan, Sputnik V&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Oxford/AstraZeneca, Sinopharm&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Covaxin, Oxford/AstraZeneca&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Pfizer/BioNTech, Sinovac&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Oxford/AstraZeneca, Sinopharm/Beijing&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Sinovac&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Sinopharm/Beijing, Sinopharm/Wuhan, Sinovac&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oxford/AstraZeneca, Sinopharm/Beijing, Sputnik V&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Sputnik V&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;CNBG, Sinovac&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Sinopharm/Beijing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sinopharm&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1 (df_covid.csv)' />
        <field-sort-custom-order field='iso_code (df_covid.csv)' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='location (df_covid.csv)' />
        <field-sort-custom-order field='Calculation_2325616634591354901' />
        <field-sort-custom-order field='date (df_covid.csv)' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='Calculation_2325616634514325504' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='new_cases_smoothed' />
        <field-sort-custom-order field='Calculation_2325616634586652689' />
        <field-sort-custom-order field='Calculation_2325616634584920080' />
        <field-sort-custom-order field='Calculation_2325616634584588303' />
        <field-sort-custom-order field='Calculation_2325616634583998478' />
        <field-sort-custom-order field='Calculation_2325616634583175181' />
        <field-sort-custom-order field='Calculation_2325616634582724620' />
        <field-sort-custom-order field='Calculation_2325616634581635080' />
        <field-sort-custom-order field='Calculation_2325616634581028871' />
        <field-sort-custom-order field='Calculation_2325616634580865030' />
        <field-sort-custom-order field='Calculation_2325616634578976772' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='new_deaths_smoothed' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='new_cases_smoothed_per_million' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_smoothed_per_million' />
        <field-sort-custom-order field='reproduction_rate' />
        <field-sort-custom-order field='icu_patients' />
        <field-sort-custom-order field='icu_patients_per_million' />
        <field-sort-custom-order field='hosp_patients' />
        <field-sort-custom-order field='hosp_patients_per_million' />
        <field-sort-custom-order field='weekly_icu_admissions' />
        <field-sort-custom-order field='weekly_icu_admissions_per_million' />
        <field-sort-custom-order field='weekly_hosp_admissions' />
        <field-sort-custom-order field='weekly_hosp_admissions_per_million' />
        <field-sort-custom-order field='new_tests' />
        <field-sort-custom-order field='total_tests' />
        <field-sort-custom-order field='total_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_smoothed' />
        <field-sort-custom-order field='new_tests_smoothed_per_thousand' />
        <field-sort-custom-order field='positive_rate' />
        <field-sort-custom-order field='tests_per_case' />
        <field-sort-custom-order field='tests_units' />
        <field-sort-custom-order field='total_vaccinations (df_covid.csv)' />
        <field-sort-custom-order field='people_vaccinated (df_covid.csv)' />
        <field-sort-custom-order field='people_fully_vaccinated (df_covid.csv)' />
        <field-sort-custom-order field='new_vaccinations' />
        <field-sort-custom-order field='new_vaccinations_smoothed' />
        <field-sort-custom-order field='total_vaccinations_per_hundred (df_covid.csv)' />
        <field-sort-custom-order field='people_vaccinated_per_hundred (df_covid.csv)' />
        <field-sort-custom-order field='people_fully_vaccinated_per_hundred (df_covid.csv)' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='stringency_index' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='population_density' />
        <field-sort-custom-order field='median_age' />
        <field-sort-custom-order field='aged_65_older' />
        <field-sort-custom-order field='aged_70_older' />
        <field-sort-custom-order field='gdp_per_capita' />
        <field-sort-custom-order field='extreme_poverty' />
        <field-sort-custom-order field='cardiovasc_death_rate' />
        <field-sort-custom-order field='diabetes_prevalence' />
        <field-sort-custom-order field='female_smokers' />
        <field-sort-custom-order field='male_smokers' />
        <field-sort-custom-order field='handwashing_facilities' />
        <field-sort-custom-order field='hospital_beds_per_thousand' />
        <field-sort-custom-order field='life_expectancy' />
        <field-sort-custom-order field='human_development_index' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_covid.csv' id='df_covid.csv_1291055C7D3B4927BB216F82966B71DC'>
            <properties context=''>
              <relation connection='textscan.17zspgz0d05jvq11t6nrd1antx7r' name='df_covid.csv' table='[df_covid#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='iso_code' ordinal='1' />
                  <column datatype='string' name='continent' ordinal='2' />
                  <column datatype='string' name='location' ordinal='3' />
                  <column datatype='date' name='date' ordinal='4' />
                  <column datatype='real' name='total_cases' ordinal='5' />
                  <column datatype='real' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='7' />
                  <column datatype='real' name='total_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_per_million' ordinal='12' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='15' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
                  <column datatype='real' name='reproduction_rate' ordinal='17' />
                  <column datatype='string' name='icu_patients' ordinal='18' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='19' />
                  <column datatype='string' name='hosp_patients' ordinal='20' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='22' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='24' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='25' />
                  <column datatype='real' name='new_tests' ordinal='26' />
                  <column datatype='real' name='total_tests' ordinal='27' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='30' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='31' />
                  <column datatype='real' name='positive_rate' ordinal='32' />
                  <column datatype='real' name='tests_per_case' ordinal='33' />
                  <column datatype='string' name='tests_units' ordinal='34' />
                  <column datatype='string' name='total_vaccinations' ordinal='35' />
                  <column datatype='string' name='people_vaccinated' ordinal='36' />
                  <column datatype='string' name='people_fully_vaccinated' ordinal='37' />
                  <column datatype='string' name='new_vaccinations' ordinal='38' />
                  <column datatype='string' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='string' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='string' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='string' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='string' name='new_vaccinations_smoothed_per_million' ordinal='43' />
                  <column datatype='real' name='stringency_index' ordinal='44' />
                  <column datatype='real' name='population' ordinal='45' />
                  <column datatype='real' name='population_density' ordinal='46' />
                  <column datatype='real' name='median_age' ordinal='47' />
                  <column datatype='real' name='aged_65_older' ordinal='48' />
                  <column datatype='real' name='aged_70_older' ordinal='49' />
                  <column datatype='real' name='gdp_per_capita' ordinal='50' />
                  <column datatype='real' name='extreme_poverty' ordinal='51' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='52' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='53' />
                  <column datatype='real' name='female_smokers' ordinal='54' />
                  <column datatype='real' name='male_smokers' ordinal='55' />
                  <column datatype='real' name='handwashing_facilities' ordinal='56' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='57' />
                  <column datatype='real' name='life_expectancy' ordinal='58' />
                  <column datatype='real' name='human_development_index' ordinal='59' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_covid.csv_1291055C7D3B4927BB216F82966B71DC' table='[Extract].[df_covid.csv_1291055C7D3B4927BB216F82966B71DC]' type='table' />
            </properties>
          </object>
          <object caption='df_vaccinations.csv' id='df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6'>
            <properties context=''>
              <relation connection='textscan.1houkr50wcbknq162qirt04aqjtv' name='df_vaccinations.csv' table='[df_vaccinations#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='year' ordinal='4' />
                  <column datatype='integer' name='month' ordinal='5' />
                  <column datatype='integer' name='day' ordinal='6' />
                  <column datatype='real' name='total_vaccinations' ordinal='7' />
                  <column datatype='real' name='people_vaccinated' ordinal='8' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='9' />
                  <column datatype='real' name='daily_vaccinations_raw' ordinal='10' />
                  <column datatype='real' name='daily_vaccinations' ordinal='11' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='12' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='13' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='14' />
                  <column datatype='real' name='daily_vaccinations_per_million' ordinal='15' />
                  <column datatype='string' name='vaccines' ordinal='16' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6' table='[Extract].[df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[location]' />
              <expression op='[location (df_covid.csv)]' />
            </expression>
            <first-end-point object-id='df_vaccinations.csv_7DF6EFD7F9384ACE8F147DF71E9A2FA6' />
            <second-end-point object-id='df_covid.csv_1291055C7D3B4927BB216F82966B71DC' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccines:nk]' />
              <groupfilter function='member' level='[none:vaccines:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]' field-type='quantitative' max='-21047509.511970162' min='-50109918.288407668' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]' field-type='quantitative' max='14352865.30155769' min='-5391824.1941563431' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' />
              <size column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]' />
              <lod column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</rows>
        <cols>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Location: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Vaccines: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Max. Total Vaccinations: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>8999230.0</value>
                    <value>&quot;India&quot;</value>
                    <value>&quot;Covaxin, Oxford/AstraZeneca&quot;</value>
                    <value>22.741</value>
                    <value>78.236000000000004</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='18' y='161' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Location: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Vaccines: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Max. Total Vaccinations: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40520000.0</value>
                    <value>&quot;China&quot;</value>
                    <value>&quot;Sinopharm/Beijing, Sinopharm/Wuhan, Sinovac&quot;</value>
                    <value>35.1753</value>
                    <value>99.387699999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='135' y='2' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Location: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Vaccines: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Max. Total Vaccinations: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>16122272.0</value>
                    <value>&quot;United Kingdom&quot;</value>
                    <value>&quot;Oxford/AstraZeneca, Pfizer/BioNTech&quot;</value>
                    <value>52.289000000000001</value>
                    <value>-1.2589999999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-112' y='-5' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Location: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Vaccines: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Max. Total Vaccinations: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>55220364.0</value>
                    <value>&quot;United States&quot;</value>
                    <value>&quot;Moderna, Pfizer/BioNTech&quot;</value>
                    <value>40.0792</value>
                    <value>-98.816400000000002</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='649' y='183' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Location: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Vaccines: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Max. Total Vaccinations: </run>
              <run bold='true'><![CDATA[<[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Latitude (generated)]</field>
                      <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6758861.0</value>
                    <value>&quot;Israel&quot;</value>
                    <value>&quot;Moderna, Pfizer/BioNTech&quot;</value>
                    <value>30.992000000000001</value>
                    <value>34.834000000000003</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{61783AE1-FAB8-4CEE-B828-EC08460EDAE9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_vaccinations])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:location:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;England&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;European Union&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</rows>
        <cols>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]</cols>
      </table>
      <simple-id uuid='{E2360B4D-6858-4A79-ACEC-63A5EF7C417B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column-instance column='[location]' derivation='CountD' name='[ctd:location:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccines:nk]' />
              <groupfilter function='member' level='[none:vaccines:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[ctd:location:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</column>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' />
              <text column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</rows>
        <cols>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[ctd:location:qk]</cols>
      </table>
      <simple-id uuid='{3C551BD8-04BB-4D5D-A9E3-FD472F6FEE06}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:date:qk]' included-values='all' />
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccines:nk]' />
              <groupfilter function='member' level='[none:vaccines:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[sum:total_vaccinations_per_hundred:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</column>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</rows>
        <cols>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[sum:total_vaccinations_per_hundred:qk]</cols>
      </table>
      <simple-id uuid='{3106E183-E77C-47F7-ACCD-E78001A02E82}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[daily_vaccinations]' derivation='None' name='[none:daily_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Exclusions (Daily Vaccinations,MONTH(Date),Vaccines,YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:daily_vaccinations:qk]' />
                <groupfilter function='level-members' level='[tmn:date:ok]' />
                <groupfilter function='level-members' level='[none:vaccines:nk]' />
                <groupfilter function='level-members' level='[yr:date:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:daily_vaccinations:qk]' member='269217.0' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:vaccines:nk]' member='&quot;Covaxin, Oxford/AstraZeneca&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2021-01-01 00:00:00#' />
                      <groupfilter function='member' level='[yr:date:ok]' member='2021' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:daily_vaccinations:qk]' />
                  <hierarchy name='[tmn:date:ok]' />
                  <hierarchy name='[none:vaccines:nk]' />
                  <hierarchy name='[yr:date:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]' included-values='in-range'>
            <max>1916190.0</max>
          </filter>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccines:nk]' />
              <groupfilter function='member' level='[none:vaccines:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok]</column>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</column>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]</column>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Exclusions (Daily Vaccinations,MONTH(Date),Vaccines,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok]' />
              <lod column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[tmn:date:ok]' />
            </encodings>
            <reference-line axis-column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.22988949716091156' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]</rows>
        <cols>([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok] / [federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk])</cols>
      </table>
      <simple-id uuid='{603BEAB1-1FBC-4DC1-8292-9F3D386F0E97}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column caption='Date (Df Covid.Csv)' datatype='date' name='[date (df_covid.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[date (df_covid.csv)]' derivation='Day' name='[dy:date (df_covid.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths_smoothed]' derivation='Max' name='[max:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (df_covid.csv)]' derivation='Month' name='[mn:date (df_covid.csv):ok]' pivot='key' type='ordinal' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column-instance column='[date (df_covid.csv)]' derivation='Quarter' name='[qr:date (df_covid.csv):ok]' pivot='key' type='ordinal' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
            <column-instance column='[date (df_covid.csv)]' derivation='Year' name='[yr:date (df_covid.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]'>
            <groupfilter function='member' level='[none:vaccines:nk]' member='&quot;Covaxin, Oxford/AstraZeneca&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date (df_covid.csv):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date (df_covid.csv):ok]' />
              <groupfilter function='member' level='[yr:date (df_covid.csv):ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date (df_covid.csv):ok]</column>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:new_cases_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:new_deaths_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:new_cases_smoothed:qk] + [federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:new_deaths_smoothed:qk])</rows>
        <cols>([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date (df_covid.csv):ok] / ([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[qr:date (df_covid.csv):ok] / ([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[mn:date (df_covid.csv):ok] / [federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[dy:date (df_covid.csv):ok])))</cols>
      </table>
      <simple-id uuid='{0F84695D-85C6-49A2-8249-604F27270E94}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
          </datasources>
          <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
            <column caption='%vaccinated population' datatype='real' name='[Calculation_2325616634522685441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_vaccinations]/[population]' />
            </column>
            <column caption='Fully vaccinated of Population' datatype='real' name='[Calculation_2325616634528698371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
            </column>
            <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_2325616634522685441]' derivation='Max' name='[max:Calculation_2325616634522685441:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2325616634528698371]' derivation='Max' name='[max:Calculation_2325616634528698371:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[daily_vaccinations]' derivation='None' name='[none:daily_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]' field-type='quantitative' max='2237581.2304890947' min='-694645.11384580494' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:Calculation_2325616634522685441:qk]' field-type='quantitative' max='0.8256237538078427' min='0.033702663755338876' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:Calculation_2325616634522685441:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:Calculation_2325616634528698371:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk] + ([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:Calculation_2325616634522685441:qk] + [federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:Calculation_2325616634528698371:qk]))</rows>
        <cols>([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok] / ([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[qr:date:ok] / ([federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[mn:date:ok] / [federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[dy:date:ok])))</cols>
      </table>
      <simple-id uuid='{886B8520-D90D-4E68-B0CB-47417A0E6C81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Analysis'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_3' value='center' />
          <format attr='vertical-align' id='dash-text_11' value='center' />
        </style-rule>
      </style>
      <size maxheight='2200' maxwidth='1000' minheight='2200' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone forceUpdate='true' h='17409' id='3' type-v2='text' w='98700' x='600' y='409'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>INTRODUCTION</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='20'>Æ </run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='12'>This dataset contains information on a variety of variables, such as the total number of doses given, the number of people who were fully immunized, the vaccine type used, and the immunization rate per 100 people.</run>
            <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Æ </run>
            <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='12'>With the use of this dataset and the data visualization software Tableau, it is possible to acquire knowledge of the progress of vaccination around the world and how various nations are doing in terms of immunizing their citizens. Clients can detect trends, patterns, and inequities linked to vaccination distribution and access by analyzing the data and producing visualizations. They can then use these findings to inform their decisions.</run>
            <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='12'>This project aims to provide an analysis of the COVID-19 world vaccination progress using Tableau, with a focus on examining the data and creating visualizations that can help stakeholders in many industries gain insight into the global vaccination progress and its business implications. Examining vaccination rates by country, vaccine distribution and access, and the impact of vaccination campaigns on the economy and public health are just a few of the topics that will be covered in the report.</run>
            <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='3750' id='4' type-v2='text' w='10000' x='10200' y='62750' />
        <zone forceUpdate='true' h='3636' id='5' type-v2='text' w='19400' x='1600' y='24682'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>DATA SETS</run>
          </formatted-text>
        </zone>
        <zone h='12000' id='6' is-centered='0' is-scaled='1' param='C:/Users/venka/Downloads/WhatsApp Image 2023-04-19 at 16.07.00 (1).jpeg' type-v2='bitmap' w='32800' x='1600' y='29182' />
        <zone h='11591' id='7' is-centered='0' is-scaled='1' param='C:/Users/venka/Downloads/WhatsApp Image 2023-04-19 at 16.07.00.jpeg' type-v2='bitmap' w='35400' x='39800' y='29000' />
        <zone forceUpdate='true' h='8545' id='8' type-v2='text' w='92400' x='400' y='16545'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>DATA SOURCE </run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontcolor='#404040' fontsize='12'>We have taken the dataset from Kaggle website and customized it upon our requirements.</run>
            <run fontcolor='#000000' fontsize='12'>Æ </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='10136' id='9' type-v2='text' w='94200' x='1400' y='41500'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>DATA SET DESCRIPTION</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>It&apos;s consiste of 2 tables COVID and Vaccination Data </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>COVID-19 data: This dataset contains information on COVID-19 cases, deaths, and hospitalizations from all across the world.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Vaccination data: This collection includes statistics for several nations across the world on COVID-19 vaccine doses provided, the type of vaccine used, and the number of people fully immunized.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>The two datasets are inserted and analyzed in the tableay to create various visualization</run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='18545' id='10' type-v2='text' w='92500' x='1900' y='70182'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>OBJECTIVES</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Dashboard 1</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>:</run>
            <run fontcolor='#404040' fontsize='12'>This dashboard presents an outline of all over-the globe vaccination progress, including total doses supplied, and the number of individuals. fully vaccinated, and vaccination rate per 100 people. It is feasible to identify places where vaccination efforts are behind and prioritize resource allocation by evaluating data on immunization rates by country and developing visualizations such as maps and bar charts.</run>
            <run fontcolor='#000000' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Dashboard 2:This dashboard displays data on the distribution of various types of vaccines as well as the number of doses provided. It is viable to understand how vaccines are disseminated and accessed by different populations by examining vaccine distribution data and developing visualizations such as stacked bar charts. This analysis can assist stakeholders in identifying and addressing gaps in vaccine access.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Dashboard 3:</run>
            <run fontcolor='#404040' fontsize='12'>This dashboard displays vaccination strides by country, including the number of doses offered, the number of persons who had been fully vaccinated, and the immunization rate per 100 people. It is possible to uncover trends and patterns in vaccine distribution and access by analyzing data on immunization progress by country and developing visualizations such as maps and scatter plots. This research can help organizations better optimize their vaccination efforts and allocate money.</run>
            <run fontcolor='#000000' fontsize='12'>Æ </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='18909' id='11' type-v2='text' w='95500' x='1500' y='51591'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>METHODOLOGIES:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='20'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#404040' fontsize='12'>Data Cleaning: Cleaning and preparing the data for Tableau analysis. This involves eliminating inaccurate or inconsistencies in data, collecting data at the appropriate degree of detail, and, as needed, identifying calculated fields or new variables.</run>
            <run fontcolor='#000000' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Data Visualization: Creating a series of Tableau charts to examine and clarify the COVID-19 immunization progress by building the following types of visualizations:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Maps: depicting immunization rates by country or region.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Trends in vaccine rates over time can be pictured using line charts or box-whisker plots.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#333333' fontsize='12'>Interactive Dashboards: We have created  interactive dashboards using Tableau that allow users to explore the data and visualize immunization progress from multiple viewpoints. Filters, slicers, and other interactive aspects that allow users to drill down into the data and focus on specific locations, time periods, or population groupings.</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='18' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='17409' id='3' type-v2='text' w='98700' x='600' y='409'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>INTRODUCTION</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='20'>Æ </run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>This dataset contains information on a variety of variables, such as the total number of doses given, the number of people who were fully immunized, the vaccine type used, and the immunization rate per 100 people.</run>
                    <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Æ </run>
                    <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>With the use of this dataset and the data visualization software Tableau, it is possible to acquire knowledge of the progress of vaccination around the world and how various nations are doing in terms of immunizing their citizens. Clients can detect trends, patterns, and inequities linked to vaccination distribution and access by analyzing the data and producing visualizations. They can then use these findings to inform their decisions.</run>
                    <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>This project aims to provide an analysis of the COVID-19 world vaccination progress using Tableau, with a focus on examining the data and creating visualizations that can help stakeholders in many industries gain insight into the global vaccination progress and its business implications. Examining vaccination rates by country, vaccine distribution and access, and the impact of vaccination campaigns on the economy and public health are just a few of the topics that will be covered in the report.</run>
                    <run fontcolor='#333333' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8545' id='8' type-v2='text' w='92400' x='400' y='16545'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>DATA SOURCE </run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run fontcolor='#404040' fontsize='12'>We have taken the dataset from Kaggle website and customized it upon our requirements.</run>
                    <run fontcolor='#000000' fontsize='12'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3636' id='5' type-v2='text' w='19400' x='1600' y='24682'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>DATA SETS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='255' h='11591' id='7' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/venka/Downloads/WhatsApp Image 2023-04-19 at 16.07.00.jpeg' type-v2='bitmap' w='35400' x='39800' y='29000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='12000' id='6' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/venka/Downloads/WhatsApp Image 2023-04-19 at 16.07.00 (1).jpeg' type-v2='bitmap' w='32800' x='1600' y='29182'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10136' id='9' type-v2='text' w='94200' x='1400' y='41500'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>DATA SET DESCRIPTION</run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>It&apos;s consiste of 2 tables COVID and Vaccination Data </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>COVID-19 data: This dataset contains information on COVID-19 cases, deaths, and hospitalizations from all across the world.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Vaccination data: This collection includes statistics for several nations across the world on COVID-19 vaccine doses provided, the type of vaccine used, and the number of people fully immunized.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>The two datasets are inserted and analyzed in the tableay to create various visualization</run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18909' id='11' type-v2='text' w='95500' x='1500' y='51591'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>METHODOLOGIES:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='20'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#404040' fontsize='12'>Data Cleaning: Cleaning and preparing the data for Tableau analysis. This involves eliminating inaccurate or inconsistencies in data, collecting data at the appropriate degree of detail, and, as needed, identifying calculated fields or new variables.</run>
                    <run fontcolor='#000000' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Data Visualization: Creating a series of Tableau charts to examine and clarify the COVID-19 immunization progress by building the following types of visualizations:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Maps: depicting immunization rates by country or region.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Trends in vaccine rates over time can be pictured using line charts or box-whisker plots.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Interactive Dashboards: We have created  interactive dashboards using Tableau that allow users to explore the data and visualize immunization progress from multiple viewpoints. Filters, slicers, and other interactive aspects that allow users to drill down into the data and focus on specific locations, time periods, or population groupings.</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3750' id='4' type-v2='text' w='10000' x='10200' y='62750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18545' id='10' type-v2='text' w='92500' x='1900' y='70182'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>OBJECTIVES</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Dashboard 1</run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>:</run>
                    <run fontcolor='#404040' fontsize='12'>This dashboard presents an outline of all over-the globe vaccination progress, including total doses supplied, and the number of individuals. fully vaccinated, and vaccination rate per 100 people. It is feasible to identify places where vaccination efforts are behind and prioritize resource allocation by evaluating data on immunization rates by country and developing visualizations such as maps and bar charts.</run>
                    <run fontcolor='#000000' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Dashboard 2:This dashboard displays data on the distribution of various types of vaccines as well as the number of doses provided. It is viable to understand how vaccines are disseminated and accessed by different populations by examining vaccine distribution data and developing visualizations such as stacked bar charts. This analysis can assist stakeholders in identifying and addressing gaps in vaccine access.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333' fontsize='12'>Dashboard 3:</run>
                    <run fontcolor='#404040' fontsize='12'>This dashboard displays vaccination strides by country, including the number of doses offered, the number of persons who had been fully vaccinated, and the immunization rate per 100 people. It is possible to uncover trends and patterns in vaccine distribution and access by analyzing data on immunization progress by country and developing visualizations such as maps and scatter plots. This research can help organizations better optimize their vaccination efforts and allocate money.</run>
                    <run fontcolor='#000000' fontsize='12'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C3140958-0AA9-4F76-9FB7-569C193D9D62}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 1' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Sheet 2' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Sheet 3' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='48250' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='9' name='Sheet 1' pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]' type-v2='size' w='16000' x='83200' y='49250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='22' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 1' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48250' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='9' name='Sheet 1' pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]' type-v2='size' w='16000' x='83200' y='49250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Sheet 3' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Sheet 2' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AF3DA4CF-4A36-4AD0-BB25-87C2599B3A60}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='df_vaccinations' name='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j' />
      </datasources>
      <datasource-dependencies datasource='federated.10d9pwl1klfrrx1bs5p2o1jdsq9j'>
        <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
        <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 4' w='55470' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Sheet 5' w='42930' x='56270' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='6' name='Sheet 6' w='81704' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='33' h='49000' id='10' is-fixed='true' name='Sheet 6' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type-v2='filter' w='16696' x='82504' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='19' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 4' w='55470' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Sheet 5' w='42930' x='56270' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='33' h='49000' id='10' mode='checkdropdown' name='Sheet 6' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type-v2='filter' w='16696' x='82504' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='6' is-fixed='true' name='Sheet 6' w='81704' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5C0A1084-BA27-43E0-808D-687ACFBC889B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_3' value='right' />
          <format attr='vertical-align' id='dash-text_3' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='9125' id='3' type-v2='text' w='90200' x='2200' y='1000'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontsize='36'>STORY</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12500' id='4' type-v2='text' w='93300' x='700' y='10250'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>STORY INTRODUCTION</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'> Focuses on interpreting the data and producing visuals that can enable stakeholders in many industries to acquire an grasp of the global vaccination progress and its business consequences,</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='89125' id='5' type-v2='text' w='93800' x='300' y='20875'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>STORY</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The COVID-19 World Vaccination Progress dataset&apos;s initial dashboard provides an overview of the global COVID-19 epidemic. The dashboard aim to provide the user with an awareness of the current situation of the pandemic, such as the number of confirmed cases, fatalities, and recoveries, as well as vaccination progress in various nations.</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The dashboard&apos;s top part indicates the overall number of confirmed cases, fatalities, and recoveries worldwide. Hovering over the data points reveals the exact figures for each category. The graph below depicts the global trend of daily new cases. The user may view the trend of daily new cases in a given country by using the filter on the right side of the graph.</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The dashboard&apos;s second portion indicates immunization progress in countries across the globe. The map illustrates the percentage of the population in various nations who have received at least one dose of vaccination. Simply hovering over the data points displays the actual percentage for each country. The graph below portrayed the number of doses given per 100 persons in many different nations. The user can select a specific country and observe the number of doses provided per 100 persons in that country by using the filter on the right side of the graph.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#404040' fontsize='12'>Second visualization depicts a line chart of daily new cases and fatalities around the world. This graph depicts the pandemic&apos;s peak and subsequent drop in new cases and deaths in 2021.</run>
            <run fontcolor='#000000' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#404040' fontsize='12'>Æ </run>
            <run fontcolor='#000000' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#404040' fontsize='12'>The third visualization is a bar chart showing the top ten nations with the most COVID-19 instances. This chart shows which countries were the most severely affected by the pandemic.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>CONCLUSION</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>Overall, this dashboard provides an ideal overview of the present-day situation pertaining to the global COVID-19 pandemic, which involves vaccination advancements among different nations. It is capable of helping governments and non-profits in making educated choices regarding the activities and policies as they respond to the outbreak.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#404040' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='9125' id='3' type-v2='text' w='90200' x='2200' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='36'>STORY</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12500' id='4' type-v2='text' w='93300' x='700' y='10250'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='12'>STORY INTRODUCTION</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'> Focuses on interpreting the data and producing visuals that can enable stakeholders in many industries to acquire an grasp of the global vaccination progress and its business consequences,</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='89125' id='5' type-v2='text' w='93800' x='300' y='20875'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='12'>STORY</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The COVID-19 World Vaccination Progress dataset&apos;s initial dashboard provides an overview of the global COVID-19 epidemic. The dashboard aim to provide the user with an awareness of the current situation of the pandemic, such as the number of confirmed cases, fatalities, and recoveries, as well as vaccination progress in various nations.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The dashboard&apos;s top part indicates the overall number of confirmed cases, fatalities, and recoveries worldwide. Hovering over the data points reveals the exact figures for each category. The graph below depicts the global trend of daily new cases. The user may view the trend of daily new cases in a given country by using the filter on the right side of the graph.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The dashboard&apos;s second portion indicates immunization progress in countries across the globe. The map illustrates the percentage of the population in various nations who have received at least one dose of vaccination. Simply hovering over the data points displays the actual percentage for each country. The graph below portrayed the number of doses given per 100 persons in many different nations. The user can select a specific country and observe the number of doses provided per 100 persons in that country by using the filter on the right side of the graph.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#404040' fontsize='12'>Second visualization depicts a line chart of daily new cases and fatalities around the world. This graph depicts the pandemic&apos;s peak and subsequent drop in new cases and deaths in 2021.</run>
                    <run fontcolor='#000000' fontsize='12'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#404040' fontsize='12'>Æ </run>
                    <run fontcolor='#000000' fontsize='12'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#404040' fontsize='12'>The third visualization is a bar chart showing the top ten nations with the most COVID-19 instances. This chart shows which countries were the most severely affected by the pandemic.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>CONCLUSION</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Overall, this dashboard provides an ideal overview of the present-day situation pertaining to the global COVID-19 pandemic, which involves vaccination advancements among different nations. It is capable of helping governments and non-profits in making educated choices regarding the activities and policies as they respond to the outbreak.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#404040' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BECB2EAF-B6B2-4FA3-97A0-6DB23BE2436E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Introduction'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone forceUpdate='true' h='49000' id='8' type-v2='text' w='98400' x='800' y='50000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontname='Tableau Bold'>COVID-19 Global Vaccination Progress</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='56875' id='3' is-centered='0' is-scaled='1' param='C:/Users/venka/Downloads/vaccine.jpg' type-v2='bitmap' w='81500' x='12300' y='21875' />
        <zone h='6625' id='10' type-v2='text' w='64600' x='22500' y='10000'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='24'>COVID-19 Global Vaccination Progress</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='17375' id='11' type-v2='text' w='31500' x='66600' y='80625'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='18'>BY GROUP-10</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='10'>Venkata Anand Sai Krishna</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='10'>Pranay Gattu</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='10'>Keerthana Reddy Solipuram</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='10'>Keerthi Reddy Maddur</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='18' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='6625' id='10' type-v2='text' w='64600' x='22500' y='10000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='24'>COVID-19 Global Vaccination Progress</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56875' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/venka/Downloads/vaccine.jpg' type-v2='bitmap' w='81500' x='12300' y='21875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='8' type-v2='text' w='98400' x='800' y='50000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold'>COVID-19 Global Vaccination Progress</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='17375' id='11' type-v2='text' w='31500' x='66600' y='80625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='18'>BY GROUP-10</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>Venkata Anand Sai Krishna</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>Pranay Gattu</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>Keerthana Reddy Solipuram</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>Keerthi Reddy Maddur</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FEDB1A72-9227-4580-BC1E-0D8440BCD940}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' name='Introduction'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F3C094FE-1D03-4EFA-A837-B5A682EDC965}' />
    </window>
    <window class='dashboard' name='Analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{628D39A2-7FD9-47D1-A83F-60D53F755285}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{50A761C0-4679-490C-BF39-DE748BA27EB2}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 4'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{320CBD7C-985B-4C65-8855-1BB4315804D9}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[max:total_vaccinations:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE729EBA-C4A7-4970-AF22-64AE37214504}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF675155-5109-4699-B001-B6640D81355F}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location (df_covid.csv):nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4154F7DF-60C2-40A0-A36F-9052DDDCC57E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[dy:date:ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[md:date:ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{841176FF-41D7-49CA-93A1-06BAB906A7D3}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:year:qk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[qr:date:ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7EDF77C5-1B5B-40CF-934B-01293D587139}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[dy:date (df_covid.csv):ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[mn:date (df_covid.csv):ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:month:qk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:vaccines:nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[qr:date (df_covid.csv):ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date (df_covid.csv):ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1202718A-46BE-4D64-A3CB-804BAE64AB2D}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[Hosp Patients Set]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[dy:date:ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[mn:date:ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:daily_vaccinations:qk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[none:location:nk]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[qr:date:ok]</field>
            <field>[federated.10d9pwl1klfrrx1bs5p2o1jdsq9j].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{878DEA28-D941-4979-9EC5-E04833B90002}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A75FF81D-FE01-4A0F-805A-4D9D02DBE6CD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analysis' width='192'>
      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
      MR687+yuZ/5/SdvGdUU2D1gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      k0ZGFQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Introduction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Wac7owAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      xJoRnftRZ4EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      NWr1jx/U/x/etjIipe/GYAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
